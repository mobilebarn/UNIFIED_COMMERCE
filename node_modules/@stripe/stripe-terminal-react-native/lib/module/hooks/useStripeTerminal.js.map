{"version":3,"names":["_react","require","_functions","_StripeTerminalContext","_useListener","_reactNative","_NativeModules$Stripe","NativeModules","StripeTerminalReactNative","getConstants","FETCH_TOKEN_PROVIDER","exports","CHANGE_CONNECTION_STATUS","CHANGE_PAYMENT_STATUS","FINISH_DISCOVERING_READERS","FINISH_INSTALLING_UPDATE","REQUEST_READER_DISPLAY_MESSAGE","REQUEST_READER_INPUT","REPORT_AVAILABLE_UPDATE","REPORT_UPDATE_PROGRESS","START_INSTALLING_UPDATE","UPDATE_DISCOVERED_READERS","START_READER_RECONNECT","READER_RECONNECT_SUCCEED","READER_RECONNECT_FAIL","CHANGE_OFFLINE_STATUS","FORWARD_PAYMENT_INTENT","REPORT_FORWARDING_ERROR","DISCONNECT","UPDATE_BATTERY_LEVEL","REPORT_LOW_BATTERY_WARNING","REPORT_READER_EVENT","ACCEPT_TERMS_OF_SERVICE","NOT_INITIALIZED_ERROR_MESSAGE","useStripeTerminal","props","_useContext","useContext","StripeTerminalContext","setLoading","isInitialized","initialize","setConnectedReader","setDiscoveredReaders","connectedReader","discoveredReaders","loading","emitter","log","_isInitialized","useCallback","_ref","onUpdateDiscoveredReaders","onFinishDiscoveringReaders","onDidFinishInstallingUpdate","onDidReportAvailableUpdate","onDidReportReaderSoftwareUpdateProgress","onDidStartInstallingUpdate","onDidRequestReaderInput","onDidRequestReaderDisplayMessage","onDidChangePaymentStatus","onDidChangeConnectionStatus","onDidStartReaderReconnect","onDidSucceedReaderReconnect","onDidFailReaderReconnect","onDidChangeOfflineStatus","onDidForwardPaymentIntent","onDidForwardingFailure","onDidDisconnect","onDidUpdateBatteryLevel","onDidReportLowBatteryWarning","onDidReportReaderEvent","onDidAcceptTermsOfService","_discoverReaders","_ref2","_asyncToGenerator2","default","params","console","error","Error","response","discoverReaders","_x","apply","arguments","useListener","didUpdateDiscoveredReaders","_ref3","readers","didFinishDiscoveringReaders","_ref4","result","didReportAvailableUpdate","_ref5","didStartInstallingUpdate","_ref6","didReportReaderSoftwareUpdateProgress","_ref7","progress","didFinishInstallingUpdate","_ref8","_ref9","update","undefined","didRequestReaderInput","_ref0","didRequestReaderDisplayMessage","_ref1","didChangePaymentStatus","_ref10","didChangeConnectionStatus","_ref11","didStartReaderReconnect","_ref12","reason","didSucceedReaderReconnect","didFailReaderReconnect","didChangeOfflineStatus","_ref13","_result$reader","reader","networkStatus","didForwardPaymentIntent","_ref14","didReportForwardingError","_ref15","didDisconnect","_ref16","didUpdateBatteryLevel","_ref17","didReportLowBatteryWarning","didReportReaderEvent","_ref18","acceptTermsOfService","_initialize","errorMessage","code","message","_cancelDiscovering","cancelDiscovering","_connectReader","_ref21","discoveryMethod","connectReader","_x2","_x3","_disconnectReader","disconnectReader","_rebootReader","rebootReader","_createPaymentIntent","_ref24","createPaymentIntent","_x4","_collectPaymentMethod","_ref25","collectPaymentMethod","_x5","_retrievePaymentIntent","_ref26","clientSecret","retrievePaymentIntent","_x6","_getLocations","_ref27","getLocations","_x7","_confirmPaymentIntent","_ref28","param","confirmPaymentIntent","_x8","_createSetupIntent","_ref29","createSetupIntent","_x9","_cancelPaymentIntent","_ref30","cancelPaymentIntent","_x0","_installAvailableUpdate","installAvailableUpdate","_cancelInstallingUpdate","cancelInstallingUpdate","_setReaderDisplay","_ref33","cart","setReaderDisplay","_x1","_retrieveSetupIntent","_ref34","retrieveSetupIntent","_x10","_collectSetupIntentPaymentMethod","_ref35","collectSetupIntentPaymentMethod","_x11","_clearReaderDisplay","clearReaderDisplay","_cancelSetupIntent","_ref37","cancelSetupIntent","_x12","_confirmSetupIntent","_ref38","confirmSetupIntent","_x13","_setSimulatedCard","_ref39","cardNumber","setSimulatedCard","_x14","_setSimulatedOfflineMode","_ref40","simulatedOffline","setSimulatedOfflineMode","_x15","_setSimulatedCollectInputsResult","_ref41","simulatedCollectInputsBehavior","setSimulatedCollectInputsResult","_x16","_simulateReaderUpdate","_ref42","simulateReaderUpdate","_x17","_collectRefundPaymentMethod","_ref43","collectRefundPaymentMethod","_x18","_confirmRefund","confirmRefund","_clearCachedCredentials","clearCachedCredentials","_cancelCollectPaymentMethod","cancelCollectPaymentMethod","_cancelCollectRefundPaymentMethod","cancelCollectRefundPaymentMethod","_cancelCollectSetupIntent","cancelCollectSetupIntent","_cancelConfirmPaymentIntent","cancelConfirmPaymentIntent","_cancelConfirmSetupIntent","cancelConfirmSetupIntent","_cancelConfirmRefund","cancelConfirmRefund","_getOfflineStatus","_response$reader","getOfflineStatus","_getPaymentStatus","getPaymentStatus","_getConnectionStatus","getConnectionStatus","_getConnectedReader","getConnectedReader","_getReaderSettings","getReaderSettings","_setReaderSettings","_ref57","setReaderSettings","_x19","_collectInputs","_ref58","collectInputs","_x20","_cancelCollectInputs","cancelCollectInputs","_collectData","_ref60","collectData","_x21","_cancelReaderReconnection","cancelReaderReconnection","_supportsReadersOfType","_ref62","supportsReadersOfType","_x22","_setTapToPayUxConfiguration","_ref63","setTapToPayUxConfiguration","_x23","_getNativeSdkVersion","getNativeSdkVersion"],"sources":["useStripeTerminal.tsx"],"sourcesContent":["import { useCallback, useContext } from 'react';\nimport type {\n  DiscoverReadersParams,\n  Reader,\n  CreatePaymentIntentParams,\n  GetLocationsParams,\n  Cart,\n  CreateSetupIntentParams,\n  CollectSetupIntentPaymentMethodParams,\n  RefundParams,\n  CollectPaymentMethodParams,\n  StripeError,\n  PaymentStatus,\n  UserCallbacks,\n  EventResult,\n  PaymentIntent,\n  OfflineStatus,\n  ICollectInputsParameters,\n  ReaderEvent,\n  ConfirmPaymentMethodParams,\n  ConfirmSetupIntentMethodParams,\n  CancelSetupIntentMethodParams,\n  CancelPaymentMethodParams,\n  CollectDataParams,\n  TapToPayUxConfiguration,\n  ConnectBluetoothReaderParams,\n  ConnectUsbReaderParams,\n  ConnectTapToPayParams,\n  ConnectHandoffParams,\n  ConnectInternetReaderParams,\n} from '../types';\nimport {\n  discoverReaders,\n  cancelDiscovering,\n  connectReader,\n  disconnectReader,\n  rebootReader,\n  createPaymentIntent,\n  collectPaymentMethod,\n  retrievePaymentIntent,\n  getLocations,\n  confirmPaymentIntent,\n  createSetupIntent,\n  cancelPaymentIntent,\n  installAvailableUpdate,\n  cancelInstallingUpdate,\n  setReaderDisplay,\n  clearReaderDisplay,\n  retrieveSetupIntent,\n  collectSetupIntentPaymentMethod,\n  cancelSetupIntent,\n  confirmSetupIntent,\n  simulateReaderUpdate,\n  collectRefundPaymentMethod,\n  confirmRefund,\n  clearCachedCredentials,\n  cancelCollectPaymentMethod,\n  cancelCollectSetupIntent,\n  cancelConfirmPaymentIntent,\n  cancelConfirmSetupIntent,\n  cancelConfirmRefund,\n  setSimulatedCard,\n  setSimulatedOfflineMode,\n  setSimulatedCollectInputsResult,\n  cancelCollectRefundPaymentMethod,\n  getOfflineStatus,\n  getReaderSettings,\n  setReaderSettings,\n  collectInputs,\n  cancelCollectInputs,\n  collectData,\n  cancelReaderReconnection,\n  supportsReadersOfType,\n  getPaymentStatus,\n  getConnectionStatus,\n  getConnectedReader,\n  setTapToPayUxConfiguration,\n  getNativeSdkVersion,\n} from '../functions';\nimport { StripeTerminalContext } from '../components/StripeTerminalContext';\nimport { useListener } from './useListener';\nimport { NativeModules } from 'react-native';\n//@ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type EventEmitter from 'react-native/Libraries/vendor/emitter/EventEmitter';\n\nexport const {\n  FETCH_TOKEN_PROVIDER,\n  CHANGE_CONNECTION_STATUS,\n  CHANGE_PAYMENT_STATUS,\n  FINISH_DISCOVERING_READERS,\n  FINISH_INSTALLING_UPDATE,\n  REQUEST_READER_DISPLAY_MESSAGE,\n  REQUEST_READER_INPUT,\n  REPORT_AVAILABLE_UPDATE,\n  REPORT_UPDATE_PROGRESS,\n  START_INSTALLING_UPDATE,\n  UPDATE_DISCOVERED_READERS,\n  START_READER_RECONNECT,\n  READER_RECONNECT_SUCCEED,\n  READER_RECONNECT_FAIL,\n  CHANGE_OFFLINE_STATUS,\n  FORWARD_PAYMENT_INTENT,\n  REPORT_FORWARDING_ERROR,\n  DISCONNECT,\n  UPDATE_BATTERY_LEVEL,\n  REPORT_LOW_BATTERY_WARNING,\n  REPORT_READER_EVENT,\n  ACCEPT_TERMS_OF_SERVICE,\n} = NativeModules.StripeTerminalReactNative.getConstants();\n\nconst NOT_INITIALIZED_ERROR_MESSAGE =\n  'First initialize the Stripe Terminal SDK before performing any action';\n\n/**\n *  useStripeTerminal hook Props\n */\nexport type Props = UserCallbacks;\n/**\n * useStripeTerminal hook.\n * This hook gives you an acesss to all available SDK methods\n * as well as the state of the current connection\n *\n * @example\n * ```ts\n * const { discoverReaders } = useStripeTerminal({\n *   onUpdateDiscoveredReaders: (readers) => {\n *     setDisoveredReaders(readers)\n *   }\n *   onDidReportReaderSoftwareUpdateProgress: (progress) => {\n *     setCurrentProgress(progress)\n *   }\n * })\n * ```\n */\nexport function useStripeTerminal(props?: Props) {\n  const {\n    setLoading,\n    isInitialized,\n    initialize,\n    setConnectedReader,\n    setDiscoveredReaders,\n    connectedReader,\n    discoveredReaders,\n    loading,\n    emitter,\n    log,\n  } = useContext(StripeTerminalContext);\n\n  const _isInitialized = useCallback(() => isInitialized, [isInitialized]);\n\n  const {\n    onUpdateDiscoveredReaders,\n    onFinishDiscoveringReaders,\n    onDidFinishInstallingUpdate,\n    onDidReportAvailableUpdate,\n    onDidReportReaderSoftwareUpdateProgress,\n    onDidStartInstallingUpdate,\n    onDidRequestReaderInput,\n    onDidRequestReaderDisplayMessage,\n    onDidChangePaymentStatus,\n    onDidChangeConnectionStatus,\n    onDidStartReaderReconnect,\n    onDidSucceedReaderReconnect,\n    onDidFailReaderReconnect,\n    onDidChangeOfflineStatus,\n    onDidForwardPaymentIntent,\n    onDidForwardingFailure,\n    onDidDisconnect,\n    onDidUpdateBatteryLevel,\n    onDidReportLowBatteryWarning,\n    onDidReportReaderEvent,\n    onDidAcceptTermsOfService,\n  } = props || {};\n\n  const _discoverReaders = useCallback(\n    async (params: DiscoverReadersParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n      const response = await discoverReaders(params);\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  // TODO: check why NativeEventListeners are not registering properly if there is no below fix\n  useListener(FETCH_TOKEN_PROVIDER, () => null);\n\n  const didUpdateDiscoveredReaders = useCallback(\n    ({ readers }: { readers: Reader.Type[] }) => {\n      setDiscoveredReaders(readers);\n      onUpdateDiscoveredReaders?.(readers);\n    },\n    [setDiscoveredReaders, onUpdateDiscoveredReaders]\n  );\n\n  const didFinishDiscoveringReaders = useCallback(\n    ({ result }: EventResult<{ error?: StripeError }>) => {\n      onFinishDiscoveringReaders?.(result.error);\n    },\n    [onFinishDiscoveringReaders]\n  );\n\n  const didReportAvailableUpdate = useCallback(\n    ({ result }: EventResult<Reader.SoftwareUpdate>) => {\n      onDidReportAvailableUpdate?.(result);\n    },\n    [onDidReportAvailableUpdate]\n  );\n\n  const didStartInstallingUpdate = useCallback(\n    ({ result }: EventResult<Reader.SoftwareUpdate>) => {\n      onDidStartInstallingUpdate?.(result);\n    },\n    [onDidStartInstallingUpdate]\n  );\n\n  const didReportReaderSoftwareUpdateProgress = useCallback(\n    ({ result }: EventResult<{ progress: string }>) => {\n      onDidReportReaderSoftwareUpdateProgress?.(result.progress);\n    },\n    [onDidReportReaderSoftwareUpdateProgress]\n  );\n\n  const didFinishInstallingUpdate = useCallback(\n    ({\n      result,\n    }: EventResult<Reader.SoftwareUpdate | { error: StripeError }>) => {\n      if ((result as { error: StripeError }).error) {\n        const { error } = result as { error: StripeError };\n\n        onDidFinishInstallingUpdate?.({\n          update: undefined,\n          error: error,\n        });\n      } else {\n        onDidFinishInstallingUpdate?.({\n          update: result as Reader.SoftwareUpdate,\n          error: undefined,\n        });\n      }\n    },\n    [onDidFinishInstallingUpdate]\n  );\n\n  const didRequestReaderInput = useCallback(\n    ({ result }: EventResult<Reader.InputOptions[]>) => {\n      onDidRequestReaderInput?.(result);\n    },\n    [onDidRequestReaderInput]\n  );\n\n  const didRequestReaderDisplayMessage = useCallback(\n    ({ result }: EventResult<Reader.DisplayMessage>) => {\n      onDidRequestReaderDisplayMessage?.(result);\n    },\n    [onDidRequestReaderDisplayMessage]\n  );\n\n  const didChangePaymentStatus = useCallback(\n    ({ result }: EventResult<PaymentStatus>) => {\n      onDidChangePaymentStatus?.(result);\n    },\n    [onDidChangePaymentStatus]\n  );\n\n  const didChangeConnectionStatus = useCallback(\n    ({ result }: EventResult<Reader.ConnectionStatus>) => {\n      onDidChangeConnectionStatus?.(result);\n    },\n    [onDidChangeConnectionStatus]\n  );\n\n  const didStartReaderReconnect = useCallback(\n    ({ reason }: { reason?: Reader.DisconnectReason }) => {\n      onDidStartReaderReconnect?.(reason);\n    },\n    [onDidStartReaderReconnect]\n  );\n\n  const didSucceedReaderReconnect = useCallback(() => {\n    onDidSucceedReaderReconnect?.();\n  }, [onDidSucceedReaderReconnect]);\n\n  const didFailReaderReconnect = useCallback(() => {\n    onDidFailReaderReconnect?.();\n    setConnectedReader(null);\n  }, [onDidFailReaderReconnect, setConnectedReader]);\n\n  const didChangeOfflineStatus = useCallback(\n    ({ result }: { result: OfflineStatus }) => {\n      if (!result.reader?.networkStatus) {\n        result.reader = undefined;\n      }\n      onDidChangeOfflineStatus?.(result);\n    },\n    [onDidChangeOfflineStatus]\n  );\n\n  const didForwardPaymentIntent = useCallback(\n    ({ result, error }: { result: PaymentIntent.Type; error: StripeError }) => {\n      onDidForwardPaymentIntent?.(result, error);\n    },\n    [onDidForwardPaymentIntent]\n  );\n\n  const didReportForwardingError = useCallback(\n    ({ error }: { error?: StripeError }) => {\n      onDidForwardingFailure?.(error);\n    },\n    [onDidForwardingFailure]\n  );\n\n  const didDisconnect = useCallback(\n    ({ reason }: { reason?: Reader.DisconnectReason }) => {\n      onDidDisconnect?.(reason);\n      setConnectedReader(null);\n      setDiscoveredReaders([]);\n    },\n    [onDidDisconnect, setConnectedReader, setDiscoveredReaders]\n  );\n\n  const didUpdateBatteryLevel = useCallback(\n    ({ result }: { result: Reader.BatteryLevel }) => {\n      onDidUpdateBatteryLevel?.(result);\n    },\n    [onDidUpdateBatteryLevel]\n  );\n\n  const didReportLowBatteryWarning = useCallback(() => {\n    onDidReportLowBatteryWarning?.();\n  }, [onDidReportLowBatteryWarning]);\n\n  const didReportReaderEvent = useCallback(\n    ({ result }: { result: ReaderEvent }) => {\n      onDidReportReaderEvent?.(result);\n    },\n    [onDidReportReaderEvent]\n  );\n\n  const acceptTermsOfService = useCallback(() => {\n    onDidAcceptTermsOfService?.();\n  }, [onDidAcceptTermsOfService]);\n\n  useListener(REPORT_AVAILABLE_UPDATE, didReportAvailableUpdate);\n  useListener(START_INSTALLING_UPDATE, didStartInstallingUpdate);\n  useListener(REPORT_UPDATE_PROGRESS, didReportReaderSoftwareUpdateProgress);\n  useListener(FINISH_INSTALLING_UPDATE, didFinishInstallingUpdate);\n\n  useListener(UPDATE_DISCOVERED_READERS, didUpdateDiscoveredReaders);\n  useListener(FINISH_DISCOVERING_READERS, didFinishDiscoveringReaders);\n\n  useListener(REQUEST_READER_INPUT, didRequestReaderInput);\n  useListener(REQUEST_READER_DISPLAY_MESSAGE, didRequestReaderDisplayMessage);\n  useListener(CHANGE_PAYMENT_STATUS, didChangePaymentStatus);\n  useListener(CHANGE_CONNECTION_STATUS, didChangeConnectionStatus);\n\n  useListener(START_READER_RECONNECT, didStartReaderReconnect);\n  useListener(READER_RECONNECT_SUCCEED, didSucceedReaderReconnect);\n  useListener(READER_RECONNECT_FAIL, didFailReaderReconnect);\n\n  useListener(CHANGE_OFFLINE_STATUS, didChangeOfflineStatus);\n  useListener(FORWARD_PAYMENT_INTENT, didForwardPaymentIntent);\n  useListener(REPORT_FORWARDING_ERROR, didReportForwardingError);\n\n  useListener(DISCONNECT, didDisconnect);\n\n  useListener(UPDATE_BATTERY_LEVEL, didUpdateBatteryLevel);\n  useListener(REPORT_LOW_BATTERY_WARNING, didReportLowBatteryWarning);\n  useListener(REPORT_READER_EVENT, didReportReaderEvent);\n  useListener(ACCEPT_TERMS_OF_SERVICE, acceptTermsOfService);\n\n  const _initialize = useCallback(async () => {\n    if (!initialize || typeof initialize !== 'function') {\n      const errorMessage =\n        'StripeTerminalProvider component is not found, has not been mounted properly or SDK has not been initialized properly';\n      log('Failed', errorMessage);\n\n      return {\n        error: {\n          code: 'Failed',\n          message: errorMessage,\n        },\n        reader: undefined,\n      };\n    }\n\n    return await initialize();\n  }, [initialize, log]);\n\n  const _cancelDiscovering = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelDiscovering();\n\n    setDiscoveredReaders([]);\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, setDiscoveredReaders, _isInitialized]);\n\n  const _connectReader = useCallback(\n    async (\n      params: ConnectBluetoothReaderParams | ConnectUsbReaderParams | ConnectTapToPayParams | ConnectHandoffParams | ConnectInternetReaderParams,\n      discoveryMethod: Reader.DiscoveryMethod\n    ) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await connectReader(params, discoveryMethod);\n\n      if (response.reader && !response.error) {\n        setConnectedReader(response.reader);\n      }\n      setLoading(false);\n\n      return response;\n    },\n    [setConnectedReader, setLoading, _isInitialized]\n  );\n\n  const _disconnectReader = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      return;\n    }\n    setLoading(true);\n\n    const response = await disconnectReader();\n\n    if (!response.error) {\n      setConnectedReader(null);\n      setDiscoveredReaders([]);\n    }\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, setConnectedReader, setDiscoveredReaders, _isInitialized]);\n\n  const _rebootReader = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      return;\n    }\n    setLoading(true);\n\n    const response = await rebootReader();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _createPaymentIntent = useCallback(\n    async (params: CreatePaymentIntentParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await createPaymentIntent(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _collectPaymentMethod = useCallback(\n    async (params: CollectPaymentMethodParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await collectPaymentMethod(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _retrievePaymentIntent = useCallback(\n    async (clientSecret: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await retrievePaymentIntent(clientSecret);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _getLocations = useCallback(\n    async (params: GetLocationsParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await getLocations(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _confirmPaymentIntent = useCallback(\n    async (param: ConfirmPaymentMethodParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await confirmPaymentIntent(param);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _createSetupIntent = useCallback(\n    async (params: CreateSetupIntentParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await createSetupIntent(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  const _cancelPaymentIntent = useCallback(\n    async (params: CancelPaymentMethodParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await cancelPaymentIntent(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _installAvailableUpdate = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await installAvailableUpdate();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _cancelInstallingUpdate = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelInstallingUpdate();\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _setReaderDisplay = useCallback(\n    async (cart: Cart) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await setReaderDisplay(cart);\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _retrieveSetupIntent = useCallback(\n    async (clientSecret: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await retrieveSetupIntent(clientSecret);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _collectSetupIntentPaymentMethod = useCallback(\n    async (params: CollectSetupIntentPaymentMethodParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await collectSetupIntentPaymentMethod(params);\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _clearReaderDisplay = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await clearReaderDisplay();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _cancelSetupIntent = useCallback(\n    async (params: CancelSetupIntentMethodParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await cancelSetupIntent(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _confirmSetupIntent = useCallback(\n    async (params: ConfirmSetupIntentMethodParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await confirmSetupIntent(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _setSimulatedCard = useCallback(\n    async (cardNumber: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await setSimulatedCard(cardNumber);\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n  \n  const _setSimulatedOfflineMode = useCallback(\n    async (simulatedOffline: boolean) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await setSimulatedOfflineMode(simulatedOffline);\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  const _setSimulatedCollectInputsResult = useCallback(\n    async (simulatedCollectInputsBehavior: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await setSimulatedCollectInputsResult(simulatedCollectInputsBehavior);\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  const _simulateReaderUpdate = useCallback(\n    async (update: Reader.SimulateUpdateType) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await simulateReaderUpdate(update);\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _collectRefundPaymentMethod = useCallback(\n    async (params: RefundParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await collectRefundPaymentMethod(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _confirmRefund = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await confirmRefund();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _clearCachedCredentials = useCallback(async () => {\n    setLoading(true);\n\n    const response = await clearCachedCredentials();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading]);\n\n  const _cancelCollectPaymentMethod = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelCollectPaymentMethod();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _cancelCollectRefundPaymentMethod = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelCollectRefundPaymentMethod();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  const _cancelCollectSetupIntent = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelCollectSetupIntent();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  const _cancelConfirmPaymentIntent = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelConfirmPaymentIntent();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  const _cancelConfirmSetupIntent = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelConfirmSetupIntent();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  const _cancelConfirmRefund = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelConfirmRefund();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  const _getOfflineStatus = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    const response = await getOfflineStatus();\n    if (!response.reader?.networkStatus) {\n      response.reader = undefined;\n    }\n    return response;\n  }, [_isInitialized]);\n\n  const _getPaymentStatus = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    const response = await getPaymentStatus();\n    return response;\n  }, [_isInitialized]);\n\n  const _getConnectionStatus = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    const response = await getConnectionStatus();\n    return response;\n  }, [_isInitialized]);\n\n  const _getConnectedReader = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    const response = await getConnectedReader();\n    return response;\n  }, [_isInitialized]);\n\n  const _getReaderSettings = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    const response = await getReaderSettings();\n\n    return response;\n  }, [_isInitialized]);\n\n  const _setReaderSettings = useCallback(\n    async (params: Reader.ReaderSettingsParameters) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      const response = await setReaderSettings(params);\n\n      return response;\n    },\n    [_isInitialized]\n  );\n\n  const _collectInputs = useCallback(\n    async (params: ICollectInputsParameters) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await collectInputs(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  const _cancelCollectInputs = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelCollectInputs();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  const _collectData = useCallback(\n    async (params: CollectDataParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await collectData(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  const _cancelReaderReconnection = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelReaderReconnection();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  const _supportsReadersOfType = useCallback(\n    async (params: Reader.ReaderSupportParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await supportsReadersOfType(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  const _setTapToPayUxConfiguration = useCallback(\n    async (params: TapToPayUxConfiguration) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await setTapToPayUxConfiguration(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  const _getNativeSdkVersion = useCallback(async () => {\n    return await getNativeSdkVersion();\n  }, []);\n\n  return {\n    initialize: _initialize,\n    discoverReaders: _discoverReaders,\n    cancelDiscovering: _cancelDiscovering,\n    connectReader: _connectReader,\n    disconnectReader: _disconnectReader,\n    rebootReader: _rebootReader,\n    createPaymentIntent: _createPaymentIntent,\n    collectPaymentMethod: _collectPaymentMethod,\n    retrievePaymentIntent: _retrievePaymentIntent,\n    getLocations: _getLocations,\n    confirmPaymentIntent: _confirmPaymentIntent,\n    createSetupIntent: _createSetupIntent,\n    cancelPaymentIntent: _cancelPaymentIntent,\n    installAvailableUpdate: _installAvailableUpdate,\n    cancelInstallingUpdate: _cancelInstallingUpdate,\n    setReaderDisplay: _setReaderDisplay,\n    clearReaderDisplay: _clearReaderDisplay,\n    retrieveSetupIntent: _retrieveSetupIntent,\n    collectSetupIntentPaymentMethod: _collectSetupIntentPaymentMethod,\n    cancelSetupIntent: _cancelSetupIntent,\n    confirmSetupIntent: _confirmSetupIntent,\n    simulateReaderUpdate: _simulateReaderUpdate,\n    collectRefundPaymentMethod: _collectRefundPaymentMethod,\n    confirmRefund: _confirmRefund,\n    clearCachedCredentials: _clearCachedCredentials,\n    cancelCollectPaymentMethod: _cancelCollectPaymentMethod,\n    cancelCollectRefundPaymentMethod: _cancelCollectRefundPaymentMethod,\n    cancelCollectSetupIntent: _cancelCollectSetupIntent,\n    cancelConfirmPaymentIntent: _cancelConfirmPaymentIntent,\n    cancelConfirmSetupIntent: _cancelConfirmSetupIntent,\n    cancelConfirmRefund: _cancelConfirmRefund,\n    setSimulatedCard: _setSimulatedCard,\n    setSimulatedOfflineMode: _setSimulatedOfflineMode,\n    setSimulatedCollectInputsResult: _setSimulatedCollectInputsResult,\n    getOfflineStatus: _getOfflineStatus,\n    getPaymentStatus: _getPaymentStatus,\n    getConnectionStatus: _getConnectionStatus,\n    getConnectedReader: _getConnectedReader,\n    getReaderSettings: _getReaderSettings,\n    setReaderSettings: _setReaderSettings,\n    collectInputs: _collectInputs,\n    cancelCollectInputs: _cancelCollectInputs,\n    collectData: _collectData,\n    cancelReaderReconnection: _cancelReaderReconnection,\n    supportsReadersOfType: _supportsReadersOfType,\n    setTapToPayUxConfiguration: _setTapToPayUxConfiguration,\n    getNativeSdkVersion: _getNativeSdkVersion,\n    emitter: emitter,\n    discoveredReaders,\n    connectedReader,\n    isInitialized,\n    loading,\n  };\n}\n"],"mappings":"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","ignoreList":[]}