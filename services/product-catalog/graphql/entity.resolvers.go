package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"
	"unified-commerce/services/product-catalog/models"
)

// FindBrandByID is the resolver for the findBrandByID field.
func (r *entityResolver) FindBrandByID(ctx context.Context, id string) (*models.Brand, error) {
	panic(fmt.Errorf("not implemented: FindBrandByID - findBrandByID"))
}

// FindCategoryByID is the resolver for the findCategoryByID field.
func (r *entityResolver) FindCategoryByID(ctx context.Context, id string) (*models.Category, error) {
	panic(fmt.Errorf("not implemented: FindCategoryByID - findCategoryByID"))
}

// FindCollectionByID is the resolver for the findCollectionByID field.
func (r *entityResolver) FindCollectionByID(ctx context.Context, id string) (*models.Collection, error) {
	panic(fmt.Errorf("not implemented: FindCollectionByID - findCollectionByID"))
}

// FindProductByID is the resolver for the findProductByID field.
func (r *entityResolver) FindProductByID(ctx context.Context, id string) (*models.Product, error) {
	panic(fmt.Errorf("not implemented: FindProductByID - findProductByID"))
}

// FindProductVariantByID is the resolver for the findProductVariantByID field.
func (r *entityResolver) FindProductVariantByID(ctx context.Context, id string) (*models.ProductVariant, error) {
	panic(fmt.Errorf("not implemented: FindProductVariantByID - findProductVariantByID"))
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
