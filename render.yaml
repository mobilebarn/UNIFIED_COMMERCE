# Render Blueprint for Unified Commerce OS
# This file automatically deploys all services when you connect it to Render

services:
  # Databases
  - type: pserv
    name: unified-commerce-postgres
    plan: free
    
  - type: redis
    name: unified-commerce-redis
    plan: free
    ipAllowList: []
    
  # Microservices
  - type: web
    name: unified-commerce-identity
    runtime: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/identity
    envVars:
      - key: PORT
        value: "8001"
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: "Identity Service"
          
  - type: web
    name: unified-commerce-product-catalog
    runtime: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/product-catalog
    envVars:
      - key: PORT
        value: "8006"
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: "Product Catalog"
          
  - type: web
    name: unified-commerce-inventory
    runtime: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/inventory
    envVars:
      - key: PORT
        value: "8005"
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: "Inventory Service"
          
  - type: web
    name: unified-commerce-cart
    runtime: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/cart
    envVars:
      - key: PORT
        value: "8002"
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: "Cart Service"
          
  - type: web
    name: unified-commerce-order
    runtime: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/order
    envVars:
      - key: PORT
        value: "8003"
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: "Order Service"
          
  - type: web
    name: unified-commerce-payment
    runtime: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/payment
    envVars:
      - key: PORT
        value: "8004"
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: "Payment Service"
          
  - type: web
    name: unified-commerce-promotions
    runtime: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/promotions
    envVars:
      - key: PORT
        value: "8007"
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: "Promotions Service"
          
  - type: web
    name: unified-commerce-merchant-account
    runtime: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/merchant-account
    envVars:
      - key: PORT
        value: "8008"
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: "Merchant Account"
          
  - type: web
    name: unified-commerce-analytics
    runtime: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/analytics
    envVars:
      - key: PORT
        value: "8009"
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: "Analytics Service"
          
  - type: web
    name: unified-commerce-gateway
    runtime: node
    plan: free
    buildCommand: npm install
    startCommand: npm start
    rootDir: gateway
    envVars:
      - key: PORT
        value: "4000"
      - key: NODE_ENV
        value: production
      - key: SERVICE_NAME
        value: "GraphQL Gateway"
