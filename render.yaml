# Render Blueprint for Unified Commerce OS
# This file automatically deploys all services when you connect it to Render

services:
  # Databases
  - type: pserv
    name: unified-commerce-postgres
    plan: free
    databaseName: unified_commerce
    
  - type: redis
    name: unified-commerce-redis
    plan: free
    
  # Microservices
  - type: web
    name: unified-commerce-identity
    env: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/identity
    envVars:
      - key: PORT
        value: 8001
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: Identity Service
          
  - type: web
    name: unified-commerce-product-catalog
    env: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/product-catalog
    envVars:
      - key: PORT
        value: 8006
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: Product Catalog
          
  - type: web
    name: unified-commerce-inventory
    env: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/inventory
    envVars:
      - key: PORT
        value: 8005
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: Inventory Service
          
  - type: web
    name: unified-commerce-cart
    env: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/cart
    envVars:
      - key: PORT
        value: 8002
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: Cart Service
          
  - type: web
    name: unified-commerce-order
    env: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/order
    envVars:
      - key: PORT
        value: 8003
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: Order Service
          
  - type: web
    name: unified-commerce-payment
    env: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/payment
    envVars:
      - key: PORT
        value: 8004
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: Payment Service
          
  - type: web
    name: unified-commerce-promotions
    env: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/promotions
    envVars:
      - key: PORT
        value: 8007
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: Promotions Service
          
  - type: web
    name: unified-commerce-merchant-account
    env: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/merchant-account
    envVars:
      - key: PORT
        value: 8008
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: Merchant Account
          
  - type: web
    name: unified-commerce-analytics
    env: go
    plan: free
    buildCommand: go build -o app ./cmd/server
    startCommand: ./app
    rootDir: services/analytics
    envVars:
      - key: PORT
        value: 8009
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: SERVICE_NAME
        value: Analytics Service
          
  - type: web
    name: unified-commerce-gateway
    env: node
    plan: free
    buildCommand: npm install
    startCommand: npm start
    rootDir: gateway
    envVars:
      - key: PORT
        value: 4000
      - key: NODE_ENV
        value: production
      - key: SERVICE_NAME
        value: GraphQL Gateway
