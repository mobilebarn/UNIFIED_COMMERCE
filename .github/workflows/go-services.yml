name: Go Services CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'services/**'
      - 'shared/**'
      - 'go.mod'
      - 'go.sum'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'services/**'
      - 'shared/**'
      - 'go.mod'
      - 'go.sum'

jobs:
  test:
    name: Test Go Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [identity, merchant-account, product-catalog, inventory, order, cart, payment, promotions]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Install dependencies
      run: |
        cd services/${{ matrix.service }}
        go mod download

    - name: Run tests
      run: |
        cd services/${{ matrix.service }}
        go test -v ./...

    - name: Run linters
      run: |
        cd services/${{ matrix.service }}
        go vet ./...

  build:
    name: Build Go Services
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        service: [identity, merchant-account, product-catalog, inventory, order, cart, payment, promotions]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Build service
      run: |
        cd services/${{ matrix.service }}
        go build -o ../../bin/${{ matrix.service }} ./cmd/server

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.service }}-binary
        path: bin/${{ matrix.service }}

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        service: [identity, merchant-account, product-catalog, inventory, order, cart, payment, promotions]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: unifiedcommerce/${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./services/${{ matrix.service }}
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}